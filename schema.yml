openapi: 3.0.3
info:
  title: Geolocation API
  version: 1.0.0
  description: Your project description
paths:
  /api/geo/locations/all/:
    get:
      operationId: geo_locations_all_list
      tags:
      - geo
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Geo'
          description: ''
  /api/geo/locations/create/:
    post:
      operationId: geo_locations_create_create
      tags:
      - geo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Geo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Geo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Geo'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Geo'
          description: ''
  /api/geo/locations/delete/{geo_id}/:
    delete:
      operationId: geo_locations_delete_destroy
      parameters:
      - in: path
        name: geo_id
        schema:
          type: integer
        required: true
      tags:
      - geo
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Geo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ip_address:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        continent_code:
          type: string
          readOnly: true
          nullable: true
        continent_name:
          type: string
          readOnly: true
          nullable: true
        country_code:
          type: string
          readOnly: true
          nullable: true
        country_name:
          type: string
          readOnly: true
          nullable: true
        region_code:
          type: string
          readOnly: true
          nullable: true
        region_name:
          type: string
          readOnly: true
          nullable: true
        city:
          type: string
          readOnly: true
          nullable: true
        postcode:
          type: string
          readOnly: true
          nullable: true
        latitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,6})?$
          readOnly: true
          nullable: true
        longitude:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,6})?$
          readOnly: true
          nullable: true
      required:
      - city
      - continent_code
      - continent_name
      - country_code
      - country_name
      - id
      - latitude
      - longitude
      - postcode
      - region_code
      - region_name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
      required:
      - id
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
